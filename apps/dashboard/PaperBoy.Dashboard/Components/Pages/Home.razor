@page "/"
@using PaperBoy.Dashboard.Clients.ContentStore
@attribute [Authorize]
@inject IContentStoreClient ContentStore

<div class="container mx-auto">
    <h1 class="text-4xl font-bold mb-4">Pending papers</h1>

    <div class="mb-4">
        <button class="btn btn-primary" @onclick="SubmitNewPaper">Submit New Paper</button>
    </div>

    @if (_papers == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <table class="table w-full">
            <thead>
            <tr>
                <th>Title</th>
                <th>Submitter</th>
                <th>URL</th>
                <th>Status</th>
                <th>Sections Summarized</th>
                <th>Total Sections</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var paper in _papers.Items)
            {
                <tr>
                    <td>@paper.Title</td>
                    <td>
                        <a class="underline hover:no-underline text-blue-600" href="mailto:@paper.Submitter?.EmailAddress">@paper.Submitter?.Name</a>
                    </td>
                    <td>
                        <a class="underline hover:no-underline text-blue-600" href="@paper.Url" target="_blank">@paper.Url</a>
                    </td>
                    <td>
                        <span class="badge">@paper.Status</span>
                    </td>
                    <td>@paper.SectionsSummarized</td>
                    <td>@paper.TotalSections</td>
                    <td>
                        @if (paper.Status == PaperStatus.Scored)
                        {
                            <button class="btn btn-ghost btn-sm" @onclick="() => ApprovePaper(paper.Id)">Approve</button>
                            <button class="btn btn-ghost btn-sm" @onclick="() => DeclinePaper(paper.Id)">Decline</button>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>

        <div class="flex justify-center mt-4 space-x-1">
            <button class="btn btn-ghost" @onclick="PreviousPage" disabled="@(!_papers.HasPreviousPage)">Previous</button>
            <button class="btn btn-ghost" @onclick="NextPage" disabled="@(!_papers.HasNextPage)">Next</button>
        </div>
    }
</div>

@code {
    private PagedResult<PaperInfo>? _papers;
    private int _currentPage = 1;
    private const int PageSize = 20;

    protected override async Task OnInitializedAsync()
    {
        await LoadPapers();
    }

    private async Task LoadPapers()
    {
        PaperStatus[] paperStatusArray = [PaperStatus.Imported, PaperStatus.Summarized, PaperStatus.Scored];
        var response = await ContentStore.GetPendingPapersAsync(paperStatusArray, _currentPage);

        _papers = response;
    }

    private async Task SubmitNewPaper()
    {
        // Logic to submit a new paper
    }

    private async Task ApprovePaper(Guid paperId)
    {
        // Logic to approve a paper
    }

    private async Task DeclinePaper(Guid paperId)
    {
        // Logic to decline a paper
    }

    private async Task PreviousPage()
    {
        if (_papers?.HasPreviousPage == true)
        {
            _currentPage--;
            await LoadPapers();
        }
    }

    private async Task NextPage()
    {
        if (_papers?.HasNextPage == true)
        {
            _currentPage++;
            await LoadPapers();
        }
    }

}